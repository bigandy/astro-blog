---
import { getCollection } from "astro:content";
// Component Imports
import BlogPostPreview from "../BlogPostPreview.astro";

export const getAllPosts = async () => {
  // Data Fetching: List all Markdown posts in the repo.
  let allPosts = [];
  const now = new Date();
  // Get all the posts from the posts directory
  allPosts = await getCollection("blog");
  if (import.meta.env.MODE === "production") {
    allPosts = allPosts.filter((post) => {
      // Get rid of draft posts first
      if (post.data.draft && post.data.draft === true) {
        return false;
      }
      return post;
    });
  }

  allPosts = allPosts.filter((post) => {
    // get rid of future posts
    return new Date(post.data.date).getTime() <= now.getTime();
  });

  allPosts = allPosts.sort(
    (a, b) => new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf()
  );

  return allPosts;
};

let allPosts = await getAllPosts();
// Take 10 latest posts for the moment until I learn how to do pagination with Astro!
allPosts = allPosts.slice(0, 9);

interface Props {
  number: number;
}
const { number = 9 } = Astro.props;

allPosts = allPosts.slice(0, number);
---

{allPosts.map((p) => <BlogPostPreview post={p} />)}
