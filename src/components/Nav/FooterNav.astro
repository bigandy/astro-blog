---
import { footerPages } from "./pages";
import { socialLinks } from "./social-links";
import { getNavClassName } from "./utils";
import { Icon } from "astro-icon/components";

const requestPathname = Astro.url.pathname;
---

<nav class="layout footer-nav">
    <ul class="layout-inner nav">
        {
            footerPages.map((entry) => {
                const className = getNavClassName(entry.url, requestPathname);

                return (
                    <li>
                        <a class={className} href={entry.url}>
                            {entry.title}
                        </a>
                    </li>
                );
            })
        }
    </ul>

    {
        socialLinks.length > 0 && (
            <ul class="layout-inner nav nav-social">
                {socialLinks.map(({ url, icon, title }) => {
                    const className = getNavClassName(url, requestPathname, 'social-link');

                    return (
                        <li>
                            <a
                                class={className}
                                href={url}
                                target="_blank"
                                data-attr-color={icon.color}
                            >
                                {icon && (
                                    <Icon
                                        class="social-icon"
                                        name={`fa6-brands:${icon.name}`}
                                        size="1em"
                                    />
                                )}
                                {title}
                            </a>
                        </li>
                    );
                })}
            </ul>
        )
    }
</nav>

<style>
    nav {
        padding-block: 2rem;
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }
    ul {
        display: flex;
        flex-wrap: wrap;
        gap: 1em;
    }

    a {
        border-block-end: 2px solid transparent;
    }

    a:hover,
    .active {
        border-bottom-color: var(--theme-accent);
    }

    .social-link {
        color: attr(data-attr-color type(<color>));
    }

    .social-icon {
        vertical-align: -0.25em;
    }
</style>

<script>
    const runDataAttrCheck = () => {
        // Check for browser support of css attr
        const supportsNewAttr = CSS.supports('color: attr(data-attr-color, type(<color>)');
       
        if (supportsNewAttr) {
            return;
        }

        // Now check if there are any elements with data-attr-* on them
        const nodesSnapshot: XPathResult = document.evaluate('//*/attribute::*[starts-with(name(), "data-attr-")]', document, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);

        for (let i = 0; i < nodesSnapshot.snapshotLength; i++) {
            const attr = nodesSnapshot.snapshotItem(i);
            if (!attr) {
                return
            }
            const type = attr.nodeName.replace('data-attr-', '');
            const value = attr.nodeValue;

            // @ts-expect-error
            attr.ownerElement.style[type] = value;
        };

    }
    runDataAttrCheck();
    
</script>