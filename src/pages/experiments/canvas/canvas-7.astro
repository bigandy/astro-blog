---
import Canvas from '@components/Global/Canvas.astro'
import FullScreenLayout from '@layouts/FullScreenLayout.astro'

const title = 'Canvas 7 - spirograph pt.1'
---

<FullScreenLayout title={title}>
  <div class="container">
    <Canvas width={800} height={800} />
  </div>
</FullScreenLayout>

<script>
  const canvas = document.getElementById("canvas") as HTMLCanvasElement;
  if (!canvas) {
    return;
  }
  const { width, height } = canvas.getBoundingClientRect();
  const ctx = canvas.getContext("2d");

  // Resize canvas
  // canvas.width = window.innerWidth;
  // height = window.innerHeight;

  // Draw Spirograph
  function drawSpirograph() {
    if (!ctx) {
      return;
    }

    var offset = -Math.PI / 2;

    // Calculate center point and radius
    var cx = width / 2;
    var cy = height / 2;
    var radius1 = width * 0.15;
    var radius2 = width * 0.15;
    var ratio = 5000;

    // Calculate x, y
    var x = cx + radius1 * Math.cos(theta - offset);
    var y = cy + radius1 * Math.sin(theta - offset);

    // Clear canvas
    ctx.fillStyle = "rgba(255,0,0,0.5)";
    ctx.fillRect(0, 0, width, height);

    // Draw spirograph
    ctx.beginPath();
    ctx.moveTo(
      cx +
        radius1 * Math.cos(-offset) +
        radius2 * Math.cos(-offset * ratio),
      cy +
        radius1 * Math.sin(-offset) +
        radius2 * Math.sin(-offset * ratio)
    );
    for (
      var i = -offset;
      i <= Math.min(theta - offset, Math.PI * 2 - offset);
      i += 0.005
    ) {
      x =
        cx +
        radius1 * Math.cos(i) +
        radius2 * Math.cos(i * ratio);
      y =
        cy +
        radius1 * Math.sin(i) +
        radius2 * Math.sin(i * ratio);
      ctx.lineTo(x, y);
    }
    // ctx.lineCap = 'round';
    ctx.lineWidth = height * 0.0021;
    ctx.strokeStyle = "rgba(255,255,255,0.9)";
    ctx.stroke();
    ctx.beginPath();
  }

  // Draw frame
  var theta = 0;
  function tick() {
    drawSpirograph();
    theta = theta + 0.01;
    requestAnimationFrame(tick);
  }
  tick();
</script>
